#!/bin/bash
BIN=$(cd "$(dirname "$0")"; pwd)
PREFIX=$(dirname $BIN)
LIB_PATH=$(dirname $PREFIX)

export FASTLANE_SELF_CONTAINED=true
export FASTLANE_INSTALLED_VIA_HOMEBREW=true

# Clear known env variables that can influence the standalone installation in a bad way.
unset RUBYOPT
unset RUBYLIB
unset GEM_HOME
unset GEM_PATH
unset GEM_CACHE

# Now define env variables that we need for the standalone installation to work and override where
# necessary.

export PATH=$BIN:$PATH

export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8
export LC_ALL=en_US.UTF-8

if [ "$FASTLANE_SELF_CONTAINED" = "true" ]; then
  # Tell Ruby where to find the gems
  # we just want to look for gems inside the bundle
  export GEM_PATH=$LIB_PATH/bundle/bin
else
  # set EXCLUDE_SYSTEM_GEMS to "true" when running command *only* on the bundled gem set
  # otherwise, this will make the user's existing gems available to the bundle
  if [ "$EXCLUDE_SYSTEM_GEMS" != "true" ]; then
    PARSE_ENV_PATH=$LIB_PATH/parse_env.rb
    export GEM_PATH=$($BIN/ruby $PARSE_ENV_PATH)
  fi
fi

# Suppress errors relating to native extensions in the user's gemset.
exec "$@" 2> >(grep -v '^Ignoring .* because its extensions are not built.  Try: gem pristine .* --version .*')
